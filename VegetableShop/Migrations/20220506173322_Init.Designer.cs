// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VegetableShop.Data;

namespace VegetableShop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220506173322_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VegetableShop.Data.carts", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("productsid")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("usersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productsid");

                    b.HasIndex("usersid");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("VegetableShop.Data.categories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VegetableShop.Data.distributors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("VegetableShop.Data.order_details", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<int?>("ordersid")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("productsid")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("ordersid");

                    b.HasIndex("productsid");

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("VegetableShop.Data.orders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("state")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<float>("total_price")
                        .HasColumnType("real");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("usersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usersid");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VegetableShop.Data.product_ratings", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("point")
                        .HasColumnType("int");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("productsid")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int?>("usersid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productsid");

                    b.HasIndex("usersid");

                    b.ToTable("product_Ratings");
                });

            modelBuilder.Entity("VegetableShop.Data.products", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("categoriesid")
                        .HasColumnType("int");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("product_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("unit_id")
                        .HasColumnType("int");

                    b.Property<int?>("unitsid")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("categoriesid");

                    b.HasIndex("unitsid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VegetableShop.Data.roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("role_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("VegetableShop.Data.shipment_details", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("current_quantity")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("int");

                    b.Property<int?>("productsid")
                        .HasColumnType("int");

                    b.Property<float>("purchase_price")
                        .HasColumnType("real");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("quantity_sold")
                        .HasColumnType("int");

                    b.Property<int>("shipment_id")
                        .HasColumnType("int");

                    b.Property<int?>("shipmentsid")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("productsid");

                    b.HasIndex("shipmentsid");

                    b.ToTable("Shipment_Details");
                });

            modelBuilder.Entity("VegetableShop.Data.shipments", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("distributor_id")
                        .HasColumnType("int");

                    b.Property<int?>("distributorsid")
                        .HasColumnType("int");

                    b.Property<string>("shipment_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("distributorsid");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("VegetableShop.Data.units", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("VegetableShop.Data.users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cmnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("full_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int?>("rolesid")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("rolesid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VegetableShop.Data.carts", b =>
                {
                    b.HasOne("VegetableShop.Data.products", "products")
                        .WithMany("carts")
                        .HasForeignKey("productsid");

                    b.HasOne("VegetableShop.Data.users", "users")
                        .WithMany("carts")
                        .HasForeignKey("usersid");

                    b.Navigation("products");

                    b.Navigation("users");
                });

            modelBuilder.Entity("VegetableShop.Data.order_details", b =>
                {
                    b.HasOne("VegetableShop.Data.orders", "orders")
                        .WithMany("order_details")
                        .HasForeignKey("ordersid");

                    b.HasOne("VegetableShop.Data.products", "products")
                        .WithMany("order_details")
                        .HasForeignKey("productsid");

                    b.Navigation("orders");

                    b.Navigation("products");
                });

            modelBuilder.Entity("VegetableShop.Data.orders", b =>
                {
                    b.HasOne("VegetableShop.Data.users", "users")
                        .WithMany("orders")
                        .HasForeignKey("usersid");

                    b.Navigation("users");
                });

            modelBuilder.Entity("VegetableShop.Data.product_ratings", b =>
                {
                    b.HasOne("VegetableShop.Data.products", "products")
                        .WithMany("product_ratings")
                        .HasForeignKey("productsid");

                    b.HasOne("VegetableShop.Data.users", "users")
                        .WithMany("product_ratings")
                        .HasForeignKey("usersid");

                    b.Navigation("products");

                    b.Navigation("users");
                });

            modelBuilder.Entity("VegetableShop.Data.products", b =>
                {
                    b.HasOne("VegetableShop.Data.categories", "categories")
                        .WithMany("products")
                        .HasForeignKey("categoriesid");

                    b.HasOne("VegetableShop.Data.units", "units")
                        .WithMany("products")
                        .HasForeignKey("unitsid");

                    b.Navigation("categories");

                    b.Navigation("units");
                });

            modelBuilder.Entity("VegetableShop.Data.shipment_details", b =>
                {
                    b.HasOne("VegetableShop.Data.products", "products")
                        .WithMany("shipment_details")
                        .HasForeignKey("productsid");

                    b.HasOne("VegetableShop.Data.shipments", "shipments")
                        .WithMany("shipment_details")
                        .HasForeignKey("shipmentsid");

                    b.Navigation("products");

                    b.Navigation("shipments");
                });

            modelBuilder.Entity("VegetableShop.Data.shipments", b =>
                {
                    b.HasOne("VegetableShop.Data.distributors", "distributors")
                        .WithMany("shipments")
                        .HasForeignKey("distributorsid");

                    b.Navigation("distributors");
                });

            modelBuilder.Entity("VegetableShop.Data.users", b =>
                {
                    b.HasOne("VegetableShop.Data.roles", "roles")
                        .WithMany("users")
                        .HasForeignKey("rolesid");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("VegetableShop.Data.categories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("VegetableShop.Data.distributors", b =>
                {
                    b.Navigation("shipments");
                });

            modelBuilder.Entity("VegetableShop.Data.orders", b =>
                {
                    b.Navigation("order_details");
                });

            modelBuilder.Entity("VegetableShop.Data.products", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("order_details");

                    b.Navigation("product_ratings");

                    b.Navigation("shipment_details");
                });

            modelBuilder.Entity("VegetableShop.Data.roles", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("VegetableShop.Data.shipments", b =>
                {
                    b.Navigation("shipment_details");
                });

            modelBuilder.Entity("VegetableShop.Data.units", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("VegetableShop.Data.users", b =>
                {
                    b.Navigation("carts");

                    b.Navigation("orders");

                    b.Navigation("product_ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
